name: Frontend CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'apps/frontend/**'
    tags:
      - 'v*'  # Deploy on version tags
  pull_request:
    branches: [ main ]
    paths:
      - 'apps/frontend/**'

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install Dependencies
      run: |
        cd apps/frontend
        npm install
        
    - name: Lint
      run: |
        cd apps/frontend
        npm run lint
        
    - name: Type Check
      run: |
        cd apps/frontend
        npx tsc --noEmit
        
    - name: Run Tests
      run: |
        cd apps/frontend
        npm run test
        
  deploy:
    needs: lint-and-test
    runs-on: ubuntu-latest
    # Only deploy on version tags or specific commit messages
    if: |
      github.ref == 'refs/heads/main' && 
      (startsWith(github.ref, 'refs/tags/v') || 
       contains(github.event.head_commit.message, '[deploy]'))
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Clean up Vercel
        run: |
          cd apps/frontend
          rm -rf .vercel || true
      
      - name: Pull Vercel Environment Information
        run: |
          cd apps/frontend
          vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Build Project Artifacts
        run: |
          cd apps/frontend
          vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
          
      - name: Deploy Project Artifacts to Vercel
        run: |
          cd apps/frontend
          vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }} 